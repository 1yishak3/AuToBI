/*  PseudosyllableFeatureExtractor.java

    Copyright (c) 2009-2010 Andrew Rosenberg
    
    This file is part of the AuToBI prosodic analysis package.

    AuToBI is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    AuToBI is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with AuToBI.  If not, see <http://www.gnu.org/licenses/>.
 */
package edu.cuny.qc.speech.AuToBI.featureextractor;

import edu.cuny.qc.speech.AuToBI.core.Region;
import edu.cuny.qc.speech.AuToBI.core.FeatureExtractor;
import edu.cuny.qc.speech.AuToBI.core.WavData;
import edu.cuny.qc.speech.AuToBI.util.SubregionUtils;
import edu.cuny.qc.speech.AuToBI.Syllabifier;

import java.util.List;

/**
 * PseudosyllableFeatureExtractor hypothesizes syllables for a given signal and aligns the loudest contained syllable
 * to each region.
 *
 * These pseudosyllables are generated by Syllabifier, and are stored as SubWord features on the regions.
 *
 * @see edu.cuny.qc.speech.AuToBI.Syllabifier
 * @see edu.cuny.qc.speech.AuToBI.core.SubWord
 */
public class PseudosyllableFeatureExtractor extends FeatureExtractor {
  private WavData wav_data;       // the wave data to analyse
  private String subregion_name;  // the feature name to store the subregion

  /**
   * Constructs a new PseudosyllableFeatureExtractor.
   *
   * @param subregion_name the feature name to store the subregion
   * @param wav_data the wave data to analyse
   */
  public PseudosyllableFeatureExtractor(String subregion_name, WavData wav_data) {
    super();
    this.subregion_name = subregion_name;
    extracted_features.add(subregion_name);
    this.wav_data = wav_data;
  }

  /**
   * Identifies the loudest pseudosyllable for a given region, constructs a SubWord object, and stores it
   * with each region.
   *
   * @param regions The regions to extract features from.
   * @throws edu.cuny.qc.speech.AuToBI.featureextractor.FeatureExtractorException if anything goes wrong.
   */
  public void extractFeatures(List regions) throws FeatureExtractorException {
    Syllabifier syllabifier = new Syllabifier();
    List<Region> pseudosyllables = syllabifier.generatePseudosyllableRegions(wav_data);

    SubregionUtils.alignLongestSubregionsToWords(regions, pseudosyllables, subregion_name);
  }
}
